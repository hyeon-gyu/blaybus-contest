name: CI/CD Pipeline  # 워크플로우의 이름 정의

on:  # 워크플로우 트리거 조건 설정
  push:
    branches: [ "main" ]  # main 브랜치에 push 이벤트 발생 시 실행

jobs:  # 실행할 작업들 정의
  build-and-test: 
    runs-on: self-hosted   # 작업이 실행될 환경을 self-hosted runner로 지정
    steps:  # 작업의 단계 정의
    - uses: actions/checkout@v4  # 레포지토리 코드를 체크아웃
    - name: Set up JDK 17   # JDK 17 설정
      uses: actions/setup-java@v4  
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle   # Gradle 설정
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
      with: 
        gradle-version: '8.9'   # Gradle 버전 지정
    - name: Cache Gradle packages   # Gradle 캐시 설정
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Create application-prod.yml  # 프로덕션 환경 설정 파일 생성
      run: |
        mkdir -p ./src/main/resources  # 필요한 디렉토리 생성
        echo "${{ secrets.PROPERTIES }}" > ./src/main/resources/application.yml  # 시크릿에서 application.yml 가져와 파일 작성
        echo "${{ secrets.PROPERTIES_PROD }}" > ./src/main/resources/application-prod.yml  # 시크릿에서 application-prod.yml 가져와 파일 작성
      shell: bash

    - name: Grant execute permission for gradlew  # Gradle Wrapper에 실행 권한 부여
      run: chmod +x gradlew

    - name: Build with Gradle  # Gradle을 사용하여 빌드 실행 (테스트 제외)
      run: ./gradlew clean build -x test
      shell: bash

  deploy:  # 배포 작업 정의

    runs-on: self-hosted  # self-hosted runner에서 실행
    steps:
      - uses: actions/checkout@v4  # 레포지토리 코드 체크아웃

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Stop existing application  # 기존 애플리케이션 중지
        run: |
          if sudo lsof -i :8080; then  # 포트 8080을 사용하는 프로세스가 있는지 확인
            echo "Port 8080 is in use. Stopping the process..."
            sudo lsof -i :8080 | awk 'NR!=1 {print $2}' | xargs sudo kill -9  # 프로세스 종료
          fi  

      - name: Build JAR   # JAR 파일 빌드
        run: ./gradlew bootJar

      - name: Deploy application  # 애플리케이션 배포
        run: |
          sudo nohup java -jar actions-runner/blaybus/blaybus-contest/blaybus-contest/build/libs/blaybus-0.0.1-SNAPSHOT.jar &

  dependency-submission:  # 의존성 제출 작업 정의
    runs-on: self-hosted   # self-hosted runner에서 실행
    permissions:
      contents: write   # 레포지토리 컨텐츠에 대한 쓰기 권한 부여

    steps:
    - uses: actions/checkout@v4  # 레포지토리 코드 체크아웃
    
    - name: Set up JDK 17  # JDK 17 설정
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Generate and submit dependency graph  # 의존성 그래프 생성 및 제출
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
